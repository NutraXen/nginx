
#  location = /abc {} 
#  matches the exact uri /abc

#  location ~ /abc 
#  is a regex match on the uri, meaning any uri containing /abc, you probably want: 

#  location ~ ^/abc 
#  for the uri begining with /abc



# -------------------------------------
#     TYPO DOMAIN NAMES - REDIRECT    -
#--------------------------------------
server {
    listen       80;
    server_name  dec.al decalciious.net decalishus.com;
    rewrite      ^ https://www.decalicious.com$request_uri? permanent;
    access_log   /dev/null;
    error_log    /dev/null;
}

# -------------------------------------------
#          BACKEND IIS SERVER FARM          -
# -------------------------------------------
upstream iis-servers-decalicious {
    # STICKY IP (SAME SERVER BASED ON IP)
    ip_hash;

    # UPSTREAM IIS SERVERS (Add More As Needed)
    server ww1.decalicious.com;
    #server ww2.decalicious.com;
    #server ww3.decalicious.com;
    #server ww4.decalicious.com;
    #server ww5.decalicious.com;

    # HEALTH CHECK SETTINGS (Milisecond Intervals) > https://github.com/yaoweibin/nginx_upstream_check_module
    check interval=50000 rise=1 fall=2 timeout=2500 type=http;
    check_http_send "GET /iis-health/default.asp HTTP/1.0\r\nHost: decalicious.com\r\n\r\n";
    check_http_expect_alive http_2xx http_3xx;
}

# -----------------------------------------------------
#      SSL DECALICIOUS.COM ( MISSING WWW )            -
#------------------------------------------------------
server {
    ssl         on;
    listen      443 ssl;
    server_name decalicious.com;

    #REDIRECT TO SSL https://www.nutraxen.com
    rewrite     ^ https://www.decalicious.com$request_uri? permanent;

    # SSL Certificate & Key
    ssl_certificate      /usr/share/nginx/ssl-certs/decalicious_com/decalicious_com_bundle.crt;
    ssl_certificate_key  /usr/share/nginx/ssl-certs/decalicious_com/decalicious_com.key;

    # Logging - Disabled
    access_log          /dev/null;
    error_log           /dev/null;
}


# -------------------------------------------
#       SSL - WWW.DECALICIOUS.COM           - 
# -------------------------------------------
server {

    # Site Name & Directory
    listen              80;
    listen              443 default_server ssl spdy;
    server_name         www.decalicious.com frank.decalicious.com x.decalicious.com;
    root                /usr/share/nginx/sites/decalicious-down/;

    # SSL Settings (with SPDY 2)
    ssl                        on;
    ssl_session_timeout        15m;
    ssl_protocols              SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers                RC4:HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;
    ssl_session_cache          shared:SSL:10m;

    # SSL Certificate
    ssl_certificate           /usr/share/nginx/ssl-certs/decalicious_com/decalicious_com_bundle.crt;
    ssl_certificate_key       /usr/share/nginx/ssl-certs/decalicious_com/decalicious_com.key;

    # Headers Force SSL Cookies
    #add_header                Strict-Transport-Security "max-age=16070400; includeSubdomains";
    add_header                X-Frame-Options SAMEORIGIN;
    #add_header                Cache-Control public;

    # Server Performance Settings
    keepalive_timeout  30s;
    allow              all;
    server_tokens      off;


      #======================================================
      #
      #          GLOBAL REDIRECT RULES ALL LOCATIONS
      #
      # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      # BEGIN RULE GROUP TO REDIRECT TO HTTP/HTTPS PROTOCOL

        # Prevent Scapers
        if ($http_user_agent ~* LWP::Simple|BBBike|wget) { return 403;}

        # Default Value HTTPS
        set $force_SSL    HTTPS;

        # Change Variable to HTTP if not Secure
        if ($ssl_protocol = "") {
            set $force_SSL     HTTP; 
        }

        # Append WWW to our variable when on main domain (www.decalicious.com) without SSL
        if ($host = 'www.decalicious.com') {
            set $force_SSL    "${force_SSL}WWW"; 
        }


      # END RULE GROUP TO REDIRECT TO HTTP/HTTPS PROTOCOL
      # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    # LOCATION >>
    # IIS FARM DASHBOARD
    location /dashboard/nginx {
        check_status;
        access_log   off;
        # allow SOME.IP.ADD.RESS;
        # deny all;
        allow all;
    }

    # TEST LOCATION FOR NGINX ECHO FILTER
    location /echo {
        echo "hello, world!";    
    }

    # LOCATION >>
    # MAIN SITE LOCATION 
    location / {

        # FIX PROTOCOL - Came In Using HTTP on WWW Domain (FORCE SSL)... (HTTPWWW)
        if ($force_SSL = HTTPWWW) {
         return 302 https://$host$request_uri;
         #rewrite ^ https://www.decalicious.com$request_uri permanent;
         break;
        }

        # FIX PROTOCOL - Came In Using HTTPS but on a subdomain which doesnt support it (FORCE HTTP)
        if ($force_SSL = HTTPS) {
         return 302 http://$host$request_uri;
         #rewrite ^ http:/$host$request_uri permanent;
         break;
        }

        # Additional Headers
        more_set_headers          "Server: DECALS";
        add_header                Cache-Control "public, max-age=60";
        etag                      on;
        expires                   60s;

        # Gzip
        gzip                      on;
        gzip_vary                 on;
        gzip_http_version         1.0;
        gzip_disable              "MSIE [1-6].(?!.*SV1)";
        gzip_min_length           750;
        gzip_buffers              64 8k;
        gzip_comp_level           3;
        gzip_proxied              any;
        gzip_types                text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        # Cache File Information
        open_file_cache           max=1000 inactive=500s;
        open_file_cache_valid     600s;
        open_file_cache_errors    on;

        # Proxy Settings
        proxy_redirect            off;
        proxy_set_header          Host              "www.decalicious.com";
        proxy_set_header          X-Real-IP         $remote_addr;
        proxy_set_header          X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header          X-Forwarded-Proto $scheme;
        proxy_pass                http://iis-servers-decalicious;
        proxy_temp_path           /usr/share/nginx/temp;
        proxy_connect_timeout     5;
        proxy_read_timeout        240;

        # Proxy Caching
        proxy_cache               off;
        #proxy_cache               STATIC;
        #proxy_cache_valid         200 302 1d;
        #proxy_cache_valid         404     1m;
        #proxy_cache_use_stale     error timeout invalid_header updating
        #http_500 http_502 http_503 http_504;

        # Intercept Errors
        proxy_intercept_errors on;
        error_page 500 502 503 504 =503 /maintenance.html;

        break;
    }

    # LOCATION >>
    # DECALICIOUS.com/BLOG (Add Missing Slash) **** 
#    location = /blog {
#        return 302 http://www.decalicious.com/blog/;
#        break;
#    }

    location = /blog/robots.txt {
        #deny all;
        internal;
        break;
    }


   # LOCATION >>
   # PROXY PASS ETSY API
    location ~* ^/etsy-proxy/(.*) {

      set $etsy_url            'openapi.etsy.com';
      set $url_full            '$1';

        # PROXY SETTINGS
        proxy_set_header          Accept-Encoding "";
        proxy_http_version        1.1;
        proxy_redirect            off;
        proxy_set_header          Host $blog_url;
        proxy_set_header          Authorization '';
        proxy_hide_header         Set-Cookie;
        proxy_hide_header         Cache-Control;
        proxy_ignore_headers      "Set-Cookie";
        proxy_buffering           off;
        resolver                  8.8.4.4 8.8.8.8 valid=300s;
        resolver_timeout          10s;
        proxy_pass                https://$etsy_url/$url_full;
        proxy_temp_path           /usr/share/nginx/temp;






    break;
    }




    # LOCATION >>
    # DECALICIOUS.com/blog (Blogger blog.decalicious.com) **** 
    location ~* ^/blog/(.*) {

        # Variables so we can redirect later
        set $blog_url            'blog.decalicious.com';
        set $url_full            '$1';

        # Update Variable So We Can Catch SSL 
        set $force_SSL    "${force_SSL}XX";

        if ($force_SSL = HTTPSWWWXX) {
         return 302 http://www.decalicious.com/blog/$url_full;
         #rewrite ^ http:/$host$request_uri permanent;
         break;
        }

        # Turn off SSL for Blog
        if ($ssl_protocol != "") {
         #rewrite ^   http://www.decalicious.com$request_uri? permanent;
         return 302 http://www.decalicious.com/blog/$url_full;
         break;
        }

        # Make sure blog is only available under www domain
        if ( $host != 'www.decalicious.com' ) {
          rewrite ^/(.*)$ http://www.decalicious.com/$1 permanent;
          break;
        }

        # Rewrite outbound text to new url | rewrite https for image sources
        subs_filter               blog.decalicious.com/ www.decalicious.com/blog/;

        # HEADERS
        more_set_headers          "Server: DECALS-BLOGGER";
        more_clear_headers        'Cache-Control-*';
        more_clear_headers        'Alternate-Protocol*';
        add_header                Cache-Control "public, max-age=7200";
        etag                      on;
        expires                   2h;

        # Cache File Information
        open_file_cache           max=1000 inactive=500s;
        open_file_cache_valid     600s;
        open_file_cache_errors    on;

        # Gzip
        gzip                      on;
        gzip_vary                 on;
        gzip_http_version         1.0;
        gzip_disable              "MSIE [1-6].(?!.*SV1)";
        gzip_min_length           200;
        gzip_buffers              64 8k;
        gzip_comp_level           3;
        gzip_proxied              any;
        gzip_types                text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        # PROXY SETTINGS
        proxy_set_header          Accept-Encoding "";
        proxy_http_version        1.1;
        proxy_redirect            off;
        proxy_set_header          Host $blog_url;
        proxy_set_header          Authorization '';
        proxy_hide_header         Set-Cookie;
        proxy_hide_header         Cache-Control;
        proxy_ignore_headers      "Set-Cookie";
        proxy_buffering           off;
        resolver                  8.8.4.4 8.8.8.8 valid=300s;
        resolver_timeout          10s;
        proxy_pass                http://$blog_url/$url_full;
        proxy_temp_path           /usr/share/nginx/temp;

        # PROXY CACHING
        proxy_cache               STATIC;
        proxy_cache_valid         200 302 1d;
        proxy_cache_valid         404     1m;
        proxy_cache_use_stale     error timeout invalid_header updating
        http_500 http_502 http_503 http_504;

    break;
    }


    # LOCATION >>
    # DECALICIOUS.COM/API (No Caching + Cors Headers on REST Requests) 
    location /api {

        # FIX PROTOCOL - Came In Using HTTP on WWW Domain (FORCE SSL)... (HTTPWWW)
        if ($force_SSL = HTTPWWW) {
         return 302 https://$host$request_uri;
         #rewrite ^ https://www.decalicious.com$request_uri permanent;
         break;
        }

        # FIX PROTOCOL - Came In Using HTTPS but on a subdomain which doesnt support it (FORCE HTTP)
        if ($force_SSL = HTTPS) {
         return 302 http://$host$request_uri;
         #rewrite ^ http:/$host$request_uri permanent;
         break;
        }

        # Additional Headers
        more_set_headers          "Server: DECALS-API";
        add_header                Cache-Control "private";
        etag                      on;
        expires                   1s;

        # Gzip
        gzip                      on;
        gzip_vary                 on;
        gzip_http_version         1.0;
        gzip_disable              "MSIE [1-6].(?!.*SV1)";
        gzip_min_length           750;
        gzip_buffers              64 8k;
        gzip_comp_level           3;
        gzip_proxied              any;
        gzip_types                text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        # Cache File Information
        #open_file_cache           max=1000 inactive=500s;
        #open_file_cache_valid     600s;
        #open_file_cache_errors    on;

        # Proxy Settings
        proxy_redirect            off;
        proxy_set_header          Host              "www.decalicious.com";
        proxy_set_header          X-Real-IP         $remote_addr;
        proxy_set_header          X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header          X-Forwarded-Proto $scheme;
        proxy_pass                http://iis-servers-decalicious;
        proxy_temp_path           /usr/share/nginx/temp;
        proxy_connect_timeout    5;
        proxy_read_timeout       240;

        # Proxy Caching
        proxy_cache               off;
        #proxy_cache               STATIC;
        #proxy_cache_valid         200 302 1d;
        #proxy_cache_valid         404     1m;
        #proxy_cache_use_stale     error timeout invalid_header updating
        #http_500 http_502 http_503 http_504;

        # Proper CORS Headers for Any Subdomain
        if ($http_origin ~* (.*\.decalicious.com)) { 
            set $cors "true"; 
        }
        if ($cors = "true") { 
            add_header 'Access-Control-Allow-Origin' "$http_origin"; 
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT'; 
            add_header 'Access-Control-Allow-Credentials' 'true'; 
            add_header 'Access-Control-Allow-Headers' 'User-Agent,Keep-Alive,Content-Type'; 
        } 
        if ($request_method = OPTIONS) { 
            return 204; 
        } 

        # Intercept Errors
        proxy_intercept_errors on;
        error_page 500 502 503 504 =503 /maintenance.html;

        break;

   }



    # LOCATION >>
    # DECALICIOUS.com/X/S3 (S3 Bucket Decalicious) **** 
    location ~* ^/x/s3/(.*) {

        # Set Variables for our S3 Bucket Name
        set $s3_bucket           'decalicious.s3.amazonaws.com';
        set $url_full            '$1';

        # Additional Headers
        more_set_headers          "Server: DECALS-S3";
        add_header                Cache-Control "no-transform,public,max-age=36720000, s-maxage=262800";
        etag                      on;
        expires                   425d;

        # Cache File Information
        open_file_cache           max=1000 inactive=500s;
        open_file_cache_valid     600s;
        open_file_cache_errors    on;

        # Gzip
        gzip                      on;
        gzip_vary                 on;
        gzip_http_version         1.0;
        gzip_disable              "MSIE [1-6].(?!.*SV1)";
        gzip_min_length           350;
        gzip_buffers              64 8k;
        gzip_comp_level           3;
        gzip_proxied              any;
        gzip_types                text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript font/ttf font/opentype application/vnd.ms-fontobject image/svg+xml;

        # Proxy Settings
        proxy_set_header          Accept-Encoding "";
        proxy_http_version        1.1;
        proxy_redirect            off;
        proxy_set_header          Host $s3_bucket;
        proxy_set_header          Authorization '';
        proxy_hide_header         x-amz-id-2;
        proxy_hide_header         x-amz-request-id;
        proxy_hide_header         x-amz-meta-tag;
        proxy_hide_header         x-amz-meta-uuid;
        proxy_hide_header         Set-Cookie;
        proxy_ignore_headers      "Set-Cookie";
        proxy_buffering           off;
        resolver                  8.8.4.4 8.8.8.8 valid=300s;
        resolver_timeout          10s;
        proxy_pass                http://$s3_bucket/$url_full;
        proxy_temp_path           /usr/share/nginx/temp;

        # Proxy Caching
        proxy_cache               STATIC;
        proxy_cache_valid         200 302 1d;
        proxy_cache_valid         404     1m;
        proxy_cache_use_stale     error timeout invalid_header updating
        http_500 http_502 http_503 http_504;

        # Intercept Errors
        proxy_intercept_errors on; 
        error_page 500 502 503 504 =503 /maintenance.html;
        error_page 404 =404 /404.html; 

        break;

    }

    # LOCATION >>
    # DECALICIOUS.com/x/
    # DECALICIOUS.com/app/
    # DECALICIOUS.com/w3c/
    # DECALICIOUS.com/favicon.ico
    # DECALICIOUS.com/p3p.xml
    # DECALICIOUS.com/apple-touch-icon-144x144.png

    location ~* /(x/|app/|w3c/|favicon\.ico|p3p\.xml|apple-touch-icon-144x144\.png) {

        # Additional Headers
        more_set_headers          "Server: DECALS-X";
        add_header                Cache-Control "no-transform,public,max-age=36720000,s-maxage=262800";
        etag                      on;
        expires                   425d;

        # Cache File Information
        open_file_cache           max=1000 inactive=500s;
        open_file_cache_valid     600s;
        open_file_cache_errors    on;

        # Gzip
        gzip                      on;
        gzip_vary                 on;
        gzip_http_version         1.0;
        gzip_disable              "MSIE [1-6].(?!.*SV1)";
        gzip_min_length           350;
        gzip_buffers              64 8k;
        gzip_comp_level           3;
        gzip_proxied              any;
        #gzip_types                text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_types                text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript font/ttf font/opentype application/vnd.ms-fontobject image/svg+xml;


        # Proxy Settings
        proxy_http_version        1.1;
        proxy_redirect            off;
        proxy_set_header          Host              $http_host;
        proxy_set_header          X-Real-IP         $remote_addr;
        proxy_set_header          X-Forwarded-For   $proxy_add_x_forwarded_for;
        #proxy_set_header          X-Forwarded-Proto $scheme;
        proxy_pass                http://iis-servers-decalicious;
        proxy_temp_path           /usr/share/nginx/temp;
        proxy_connect_timeout    5;
        proxy_read_timeout       240;

        # Proxy Caching
        proxy_cache               STATIC;
        proxy_cache_valid         200 302 1d;
        proxy_cache_valid         404     1m;
        proxy_cache_use_stale     error timeout invalid_header updating
        http_500 http_502 http_503 http_504;

        # Intercept Errors
        proxy_intercept_errors on; 
        error_page 500 502 503 504 =404 /404.html; 
        error_page 404 =404 /404.html; 
        break;

    }

      #======================================================
      #
      #          GLOBAL REDIRECT RULES ALL LOCATIONS
      #
      # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      # BEGIN TEZIZE GEO IP LOCATION  (http://www.telize.com/)
        location ~ /geo/ip$
        {
            charset off;
            default_type text/plain;
            echo $remote_addr;
        }

        location ~ /geo/jsonip$
        {
            echo_exec /geo/jsonify ip=$remote_addr&callback=$arg_callback;
        }

        rewrite ^/geo/whois$ /geo/whois/ last; 

        location ~ /geo/whois/(?<ip>.*) {
            if ($ip = "")
            {
              set $ip $remote_addr;
            }
            proxy_set_header X-Real-IP $ip;
            proxy_pass $scheme://127.0.0.1/geo/localize?callback=$arg_callback;
            more_set_headers          "Server: TELIZE";
        }

        location /geo/localize {
          set_real_ip_from 127.0.0.1;
          echo_exec /geo/jsonify ip=$remote_addr&country_code=$geoip_city_country_code&country_code3=$geoip_city_country_code3&country=$geoip_city_country_name&region_code=$geoip_region&region=$geoip_region_name&city=$geoip_city&postal_code=$geoip_postal_code&continent_code=$geoip_city_continent_code&latitude=$geoip_latitude&longitude=$geoip_longitude&dma_code=$geoip_dma_code&area_code=$geoip_area_code&org=$geoip_org&timezone=$geoip_timezone&callback=$arg_callback;
        }

        location /geo/jsonify {
          access_log off;
          charset iso-8859-1;
          default_type application/json;
          if ($arg_org ~* "^(AS[0-9]+) (.+)") {
          set $asn $1;
          set $isp $2;
        }

        content_by_lua '
            local cjson = require("cjson")
            local callback = ngx.var.arg_callback
            local args = {
            ip = ngx.var.arg_ip,
            country_code = ngx.var.arg_country_code,
            country_code3 = ngx.var.arg_country_code3,
            country = ngx.var.arg_country,
            region = ngx.var.arg_region,
            region_code = ngx.var.arg_region_code,
            city = ngx.var.arg_city,
            postal_code = ngx.var.arg_postal_code,
            continent_code = ngx.var.arg_continent_code,
            latitude = ngx.var.arg_latitude,
            longitude = ngx.var.arg_longitude,
            dma_code = ngx.var.arg_dma_code,
            area_code = ngx.var.arg_area_code,
            timezone = ngx.var.arg_timezone,
            asn = ngx.var.asn,
            isp = ngx.var.isp
        }

          -- Validate args
          for item, value in pairs(args) do
          if args[item] == "" then
          args[item] = nil
          elseif item == "latitude" or item == "longitude" then
          args[item] = tonumber(value)
          end
          end

          if args["ip"] == "127.0.0.1" then
          ngx.status = ngx.HTTP_BAD_REQUEST
          ngx.say(cjson.encode({code = 401, message = "Input string is not a valid IP address"}))
          ngx.exit(ngx.HTTP_OK)
          end

          local json = cjson.encode(args)

          if callback ~= "" then
          ngx.say(callback, "(", json, ");")
          else
          ngx.say(json)
          end';
        }
      # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      # END TELIZE GEO_IP RULES
      # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


    # ERROR - MAINTENANCE 
    location  ^~ /maintenance.html {
        more_set_headers          "Server: DECALS-ERRS";
        add_header                Cache-Control "no-transform,public,max-age=60,s-maxage=60";
        expires                   1m;
        root                      /usr/share/nginx/sites/decalicious-down/;
        index                     maintenance.html index.html index.htm;
        allow                     all;
    }

    # ERROR - PAGE NOT FOUND
    location  ^~ /404.html {
        more_set_headers          "Server: DECALS-ERRS";
        add_header                Cache-Control "no-transform,public,max-age=60,s-maxage=60";
        expires                   1m;
        root                      /usr/share/nginx/sites/decalicious-down/;
        index                     404.html index.html index.htm;
        allow                     all;
    }

    # ERROR - ERROR PAGE SCRIPTS 
        location /xs {
        more_set_headers          "Server: DECALS-ERRS";
        add_header                Cache-Control "no-transform,public,max-age=60,s-maxage=60";
        expires                   1m;
        root                      /usr/share/nginx/sites/decalicious-down/;
        allow  all;
    }

    #  ERROR - PAGES FOR LOCAL REQUESTS 
    error_page 404  /usr/share/nginx/sites/decalicious-down/404.html;
    error_page 500 502 503 504 =503 /usr/share/nginx/sites/decalicious-down/maintenance.html;


    # LOGGING - OFF
        #access_log          /dev/null;
        #error_log           /dev/null;
    # LOGGING - CRITICAL
        error_log            /var/log/nginx/decalicious-error.log crit;
        access_log           /dev/null;
    # LOGGING - DEBUG
        #error_log           /var/log/nginx/decalicious-error.log debug;
        #access_log          /var/log/nginx/decalicious.log ;
}



